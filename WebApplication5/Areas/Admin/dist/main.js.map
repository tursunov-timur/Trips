{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/ui/destinations/destinations.component.html","webpack:///./src/app/ui/trip-edit/trip-edit.component.html","webpack:///./src/app/ui/trips/trips.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/models/trip.model.ts","webpack:///./src/app/core/services/main.service.ts","webpack:///./src/app/ui/destinations/destinations.component.ts","webpack:///./src/app/ui/trip-edit/trip-edit.component.ts","webpack:///./src/app/ui/trips/trips.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"<div>\\n    <table class=\\\"table table-striped table-sm\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Имя</th>\\n            <th scope=\\\"col\\\">Фамилия</th>\\n            <th scope=\\\"col\\\">Username</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <th scope=\\\"row\\\">1</th>\\n            <td>Mark</td>\\n            <td>Otto</td>\\n            <td>@mdo</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">2</th>\\n            <td>Jacob</td>\\n            <td>Thornton</td>\\n            <td>@fat</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">3</th>\\n            <td>Larry</td>\\n            <td>the Bird</td>\\n            <td>@twitter</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n</div>\\n\"","module.exports = \"\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title h2\\\" id=\\\"modal-basic-title\\\">Trip</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div *ngIf=\\\"currentTrip\\\">\\n          <form [formGroup]=\\\"currentTripForm\\\"> \\n              <div class=\\\"form-group\\\">\\n                  <input class=\\\"form-control d-none\\\" name=\\\"id\\\" formControlName=\\\"Id\\\" />\\n              </div>   \\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-8\\\">\\n                      <label>Event name:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"name\\\" formControlName=\\\"Name\\\" />\\n                      </div>\\n                  </div>\\n                  <!-- <div class=\\\"col-lg-4\\\">\\n                      <label>Event type:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <select class=\\\"form-control\\\" formControlName=\\\"type\\\">\\n                              <option [value]=\\\"type.key\\\" *ngFor=\\\"let type of eventTypes$\\\">{{type.value}}</option>\\n                          </select>\\n                      </div>\\n                  </div> -->\\n              </div>\\n              <!-- <label>Text:</label>\\n              <div class=\\\"form-group\\\">                 \\n                  <app-ngx-editor                   \\n                      [spellcheck]=\\\"true\\\" \\n                      formControlName=\\\"text\\\" \\n                      [config]=\\\"editorConfig\\\"\\n                      [imageEndPoint]=\\\"uploadImageUrl\\\"></app-ngx-editor>\\n              </div>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Created date:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"createDate\\\" formControlName=\\\"createDate\\\" readonly/>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Modification date:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"modificationDate\\\" formControlName=\\\"modificationDate\\\" readonly/>\\n                      </div>\\n                  </div>\\n              </div> -->\\n          </form>\\n        </div>\\n        <div class=\\\"modal-footer pb-0\\\">\\n          <button class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\" (click)=\\\"saveChanges()\\\">Save changes</button>\\n        </div>\\n    </div>    \\n   \"","module.exports = \"<div>    \\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Имя</th>\\n            <th scope=\\\"col\\\">Фамилия</th>\\n            <th scope=\\\"col\\\">Username</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let trip of trips$; let i = index;\\\">\\n            <th scope=\\\"row\\\">{{ i + 1}}</th>\\n            <td>trip.Name</td>\\n            <td>trip.Description</td>         \\n          </tr>          \\n        </tbody>\\n      </table>\\n</div>\\n<div>\\n    <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewTrip()\\\">Add new trip</button>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DestinationsComponent } from './ui/destinations/destinations.component';\nimport { TripsComponent } from './ui/trips/trips.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', component: TripsComponent},\n  { path: 'trips', pathMatch: 'full', component: TripsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'AdminApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DestinationsComponent } from './ui/destinations/destinations.component';\nimport { TripsComponent } from './ui/trips/trips.component';\nimport { TripEditComponent } from './ui/trip-edit/trip-edit.component';\nimport { APP_BASE_HREF } from '@angular/common';\n@NgModule({\n  declarations: [\n    AppComponent,\n    DestinationsComponent,\n    TripsComponent,\n    TripEditComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  entryComponents: [\n    TripEditComponent\n  ],\n  providers: [\n    {provide: APP_BASE_HREF, useValue : '/Admin/AdminHome/Index' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Trip {\r\n    Id: string;\r\n    Name: string;\r\n    Text: string;\r\n    Url: string;\r\n    ImagePath: string;\r\n    StartDate: Date;\r\n    EndDate: Date;\r\n    Price: number;\r\n    PriceText: string;\r\n    Sale: number;\r\n    HasSale: boolean;\r\n    Days: number;\r\n    Nights: number;\r\n    GroupSize: number;\r\n    TourDates: string;\r\n    Map: string;\r\n    SEOId: string;\r\n    DestinatioId: string;\r\n    ActivityId: string;\r\n    TripTypeId: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Trip } from '../models/trip.model';\n\nconst SERVER_URL = 'http://localhost:20855/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(private http: HttpClient) { }\n\n  getTripsList(): Observable<Trip[]> {\n    return this.http.get<Trip[]>(SERVER_URL + '/Trips/getTripsList');\n  }\n\n  getTripById(tripId: string): Observable<Trip> {\n    return this.http.get<Trip>(SERVER_URL + '/Trips/tripId/' + tripId);\n  }\n\n  saveTrip(trip: Trip): Observable<Trip[]> {\n    return this.http.post<Trip[]>(SERVER_URL + '/Trips/saveTrip', trip);\n  }\n\n  updateTrip(trip: Trip): Observable<Trip[]> {\n    return this.http.post<Trip[]>(SERVER_URL + '/Trips/updateTrip', trip);\n  }\n\n  deleteTrip(newsId: string): Observable<Trip[]> {\n    return this.http.get<Trip[]>(SERVER_URL + '/Trips/deleteTrip/' + newsId);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-destinations',\n  templateUrl: './destinations.component.html'\n})\nexport class DestinationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Trip } from '../../core/models/trip.model';\nimport { MainService } from '../../core/services/main.service';\nimport { NgbModal, NgbActiveModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-trip-edit',\n  templateUrl: './trip-edit.component.html'\n})\nexport class TripEditComponent implements OnInit {\n  @Input() tripId: string;\n  @Output() updateList: EventEmitter<Trip[]> = new EventEmitter();\n  currentTrip: Trip;\n  currentTripForm: FormGroup;\n\n  StartDateStr: string;\n  EndDateStr: string;\n\n  constructor(\n    private mainService: MainService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    public modal: NgbActiveModal\n  ) { }\n\n  ngOnInit() {\n    const datePipe = new DatePipe('en-US');\n    this.initcurrentTrip();\n    if (this.tripId) {\n      this.mainService.getTripById(this.tripId).subscribe(\n        res => {\n          this.currentTrip = res;\n          this.StartDateStr = datePipe.transform(this.currentTrip.StartDate, 'MM/dd/yyyy');\n          this.EndDateStr = datePipe.transform(this.currentTrip.EndDate, 'MM/dd/yyyy');\n          this.loadcurrentTrip();\n          this.cdr.detectChanges();\n        }\n      );\n    } else {\n      this.currentTrip = new Trip();\n    }\n  }\n\n  initcurrentTrip() {\n    this.currentTripForm = this.fb.group({\n      Id: [''],\n      Name: [''],\n      Text: [''],\n      Url: [''],\n      ImagePath: [''],\n      StartDateStr: [''],\n      EndDateStr: [''],\n      Price: [''],\n      PriceText: [''],\n      Sale: [''],\n      HasSale: [''],\n      Days: [''],\n      Nights: [''],\n      GroupSize: [''],\n      TourDates: [''],\n      SEOId: [''],\n      DestinatioId: [''],\n      ActivityId: [''],\n      TripTypeId: ['']\n    });\n  }\n\n  loadcurrentTrip() {\n    this.currentTripForm = this.fb.group({\n      Id: [this.currentTrip.Id],\n      Name: [this.currentTrip.Name],\n      Text: [this.currentTrip.Text],\n      Url: [this.currentTrip.Url],\n      ImagePath: [this.currentTrip.ImagePath],\n      StartDateStr: [this.StartDateStr],\n      EndDateStr: [this.EndDateStr],\n      Price: [this.currentTrip.Price],\n      PriceText: [this.currentTrip.PriceText],\n      Sale: [this.currentTrip.Sale],\n      HasSale: [this.currentTrip.HasSale],\n      Days: [this.currentTrip.Days],\n      Nights: [this.currentTrip.Nights],\n      GroupSize: [this.currentTrip.GroupSize],\n      TourDates: [this.currentTrip.TourDates],\n      SEOId: [this.currentTrip.SEOId],\n      DestinatioId: [this.currentTrip.DestinatioId],\n      ActivityId: [this.currentTrip.ActivityId],\n      TripTypeId: [this.currentTrip.TripTypeId]\n    });\n  }\n\n  saveChanges() {\n    const newTrip = new Trip();\n    // tslint:disable-next-line:no-string-literal\n    newTrip.Name = this.currentTripForm.controls.Name.value;\n    newTrip.Text = this.currentTripForm.controls.Text.value;\n    newTrip.Url = this.currentTripForm.controls.Url.value;\n    newTrip.ImagePath = this.currentTripForm.controls.ImagePath.value;\n    newTrip.StartDate = this.currentTripForm.controls.StartDateStr.value;\n    newTrip.EndDate = this.currentTripForm.controls.EndDateStr.value;\n    newTrip.Price = this.currentTripForm.controls.Price.value;\n    newTrip.PriceText = this.currentTripForm.controls.PriceText.value;\n    newTrip.Sale = this.currentTripForm.controls.Sale.value;\n    newTrip.HasSale = this.currentTripForm.controls.HasSale.value;\n    newTrip.Days = this.currentTripForm.controls.Days.value;\n    newTrip.Nights = this.currentTripForm.controls.Nights.value;\n    newTrip.GroupSize = this.currentTripForm.controls.GroupSize.value;\n    newTrip.TourDates = this.currentTripForm.controls.TourDates.value;\n    newTrip.SEOId = this.currentTripForm.controls.SEOId.value;\n    newTrip.DestinatioId = this.currentTripForm.controls.DestinatioId.value;\n    newTrip.ActivityId = this.currentTripForm.controls.ActivityId.value;\n    newTrip.TripTypeId = this.currentTripForm.controls.TripTypeId.value;\n    if (this.currentTrip.Id) {\n      this.mainService.updateTrip(newTrip).subscribe(\n        res => {\n          this.modal.close();\n          this.updateList.emit(res);\n        }\n      );\n    } else {\n      this.mainService.saveTrip(newTrip).subscribe(\n        res => {\n          this.modal.close();\n          this.updateList.emit(res);\n        }\n      );\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MainService } from '../../core/services/main.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { Trip } from '../../core/models/trip.model';\nimport { TripEditComponent } from '../trip-edit/trip-edit.component';\n\n@Component({\n  selector: 'app-trips',\n  templateUrl: './trips.component.html'\n})\nexport class TripsComponent implements OnInit {\n  trips$: Trip[];\n\n  subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private mainService: MainService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.subscriptions.add(this.mainService.getTripsList().subscribe(\n      res => {\n        this.trips$ = res;\n      }\n    ));\n  }\n\n  addNewTrip() {\n    const modalRef = this.modalService.open(TripEditComponent, {size: 'lg'});\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      this.trips$ = receivedEntry;\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}