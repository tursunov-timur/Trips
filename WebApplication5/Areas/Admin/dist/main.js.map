{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/ui/_modals/confirm-modal/confirm-modal.component.html","webpack:///./src/app/ui/activities/activities-list/activities-list.component.html","webpack:///./src/app/ui/activities/activity-edit/activity-edit.component.html","webpack:///./src/app/ui/destinations/destination-edit/destination-edit.component.html","webpack:///./src/app/ui/destinations/destinations-list/destinations-list.component.html","webpack:///./src/app/ui/trips/trip-edit/trip-edit.component.html","webpack:///./src/app/ui/trips/trips-list/trips-list.component.html","webpack:///./src/app/ui/types-of-trip/types-of-trip-edit/types-of-trip-edit.component.html","webpack:///./src/app/ui/types-of-trip/types-of-trip-list/types-of-trip-list.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/models/trips/activity.model.ts","webpack:///./src/app/core/models/trips/destination.model.ts","webpack:///./src/app/core/models/trips/price-item.ts","webpack:///./src/app/core/models/trips/program-day.ts","webpack:///./src/app/core/models/trips/trip-faq.ts","webpack:///./src/app/core/models/trips/trip-foto.ts","webpack:///./src/app/core/models/trips/trip.model.ts","webpack:///./src/app/core/models/trips/type-of-trip.model.ts","webpack:///./src/app/core/services/trips/activities.service.ts","webpack:///./src/app/core/services/trips/destinations.service.ts","webpack:///./src/app/core/services/trips/trips.service.ts","webpack:///./src/app/core/services/trips/types-of-trip.service.ts","webpack:///./src/app/ui/_modals/confirm-modal/confirm-modal.component.ts","webpack:///./src/app/ui/activities/activities-list/activities-list.component.ts","webpack:///./src/app/ui/activities/activity-edit/activity-edit.component.ts","webpack:///./src/app/ui/destinations/destination-edit/destination-edit.component.ts","webpack:///./src/app/ui/destinations/destinations-list/destinations-list.component.ts","webpack:///./src/app/ui/trips/trip-edit/trip-edit.component.ts","webpack:///./src/app/ui/trips/trips-list/trips-list.component.ts","webpack:///./src/app/ui/types-of-trip/types-of-trip-edit/types-of-trip-edit.component.ts","webpack:///./src/app/ui/types-of-trip/types-of-trip-list/types-of-trip-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h3 class=\\\"modal-title\\\">Confirm modal</h3>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <p>{{text}}</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-success\\\" (click)=\\\"closeModal('No')\\\">No</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-danger\\\" (click)=\\\"closeModal('Yes')\\\">Yes</button>\\n</div>\"","module.exports = \"<ol class=\\\"breadcrumb\\\">\\n    Activities List\\n</ol>\\n<div>    \\n    <table id=\\\"activitys-list\\\" class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Actions</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let activity of activities$; let i = index;\\\">\\n            <th scope=\\\"row\\\">{{ i + 1}}</th>\\n            <td>{{ activity.name }}</td>\\n            <td>{{ activity.text }}</td>    \\n            <td class=\\\"text-center\\\">\\n                <a (click)=\\\"editActivity(activity.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>&nbsp;\\n                <a (click)=\\\"deleteActivity(activity.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-trash-alt\\\"></i></a>\\n            </td>     \\n            </tr>          \\n        </tbody>\\n        </table>\\n</div>\\n<div>\\n    <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewActivity()\\\">Add new activity</button>\\n</div>\"","module.exports = \"\\n    <div class=\\\"modal-header py-1 px-3\\\">\\n        <h4 class=\\\"modal-title h4\\\" id=\\\"modal-basic-title\\\">Activity</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body pt-0 pb-2\\\">\\n        <div *ngIf=\\\"currentActivity\\\">\\n          <form [formGroup]=\\\"currentActivityForm\\\" id=\\\"currentActivityForm\\\"> \\n              <div class=\\\"form-group\\\">\\n                  <input class=\\\"form-control d-none\\\" formControlName=\\\"id\\\" />\\n              </div>   \\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Activity name:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Activity url:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"url\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-12\\\">\\n                    <label>Activity description:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" ></textarea>\\n                    </div>\\n                  </div>                 \\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Seo description</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"seoDescription\\\" ></textarea>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Seo keywords</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"seoKeywords\\\" ></textarea>\\n                    </div>\\n                  </div>\\n                  <!-- <div class=\\\"col-lg-4\\\">\\n                      <label>Event type:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <select class=\\\"form-control\\\" formControlName=\\\"type\\\">\\n                              <option [value]=\\\"type.key\\\" *ngFor=\\\"let type of eventTypes$\\\">{{type.value}}</option>\\n                          </select>\\n                      </div>\\n                  </div> -->\\n              </div>\\n              <!-- <label>Text:</label>\\n              <div class=\\\"form-group\\\">                 \\n                  <app-ngx-editor                   \\n                      [spellcheck]=\\\"true\\\" \\n                      formControlName=\\\"text\\\" \\n                      [config]=\\\"editorConfig\\\"\\n                      [imageEndPoint]=\\\"uploadImageUrl\\\"></app-ngx-editor>\\n              </div>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Created date:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"createDate\\\" formControlName=\\\"createDate\\\" readonly/>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Modification date:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"modificationDate\\\" formControlName=\\\"modificationDate\\\" readonly/>\\n                      </div>\\n                  </div>\\n              </div> -->\\n          </form>\\n        </div>\\n\\n\\n        <div class=\\\"modal-footer pt-2 pb-0 px-0\\\">\\n          <button class=\\\"btn btn-outline-dark btn-sm\\\" type=\\\"button\\\" (click)=\\\"saveChanges()\\\">Save changes</button>\\n        </div>\\n    </div>    \\n   \\n\"","module.exports = \"\\n    <div class=\\\"modal-header py-1 px-3\\\">\\n        <h4 class=\\\"modal-title h4\\\" id=\\\"modal-basic-title\\\">Destination</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body pt-0 pb-2\\\">\\n        <div *ngIf=\\\"currentDestination\\\">\\n          <form [formGroup]=\\\"currentDestinationForm\\\" id=\\\"currentDestinationForm\\\"> \\n              <div class=\\\"form-group\\\">\\n                  <input class=\\\"form-control d-none\\\" formControlName=\\\"id\\\" />\\n              </div>   \\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Destination name:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Destination url:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"url\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-12\\\">\\n                    <label>Destination description:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" ></textarea>\\n                    </div>\\n                  </div>                 \\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Seo description</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"seoDescription\\\" ></textarea>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Seo keywords</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"seoKeywords\\\" ></textarea>\\n                    </div>\\n                  </div>               \\n              </div>              \\n          </form>\\n        </div>\\n\\n\\n        <div class=\\\"modal-footer pt-2 pb-0 px-0\\\">\\n          <button class=\\\"btn btn-outline-dark btn-sm\\\" type=\\\"button\\\" (click)=\\\"saveChanges()\\\">Save changes</button>\\n        </div>\\n    </div>    \\n   \\n\"","module.exports = \"<ol class=\\\"breadcrumb\\\">\\n    Destinations List\\n</ol>\\n<div>    \\n    <table id=\\\"activitys-list\\\" class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Actions</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let destination of destinations$; let i = index;\\\">\\n            <th scope=\\\"row\\\">{{ i + 1}}</th>\\n            <td>{{ destination.name }}</td>\\n            <td>{{ destination.text }}</td>    \\n            <td class=\\\"text-center\\\">\\n                <a (click)=\\\"editDestination(destination.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>&nbsp;\\n                <a (click)=\\\"deleteDestination(destination.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-trash-alt\\\"></i></a>\\n            </td>     \\n            </tr>          \\n        </tbody>\\n        </table>\\n</div>\\n<div>\\n    <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewDestination()\\\">Add new destination</button>\\n</div>\"","module.exports = \"\\n    <div class=\\\"modal-header py-1 px-3\\\">\\n        <h4 class=\\\"modal-title h4\\\" id=\\\"modal-basic-title\\\">Trip</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body pt-0 pb-2\\\">\\n        <div *ngIf=\\\"currentTrip\\\">\\n          <form [formGroup]=\\\"currentTripForm\\\" id=\\\"currentTripForm\\\"> \\n              <div class=\\\"form-group\\\">\\n                  <input class=\\\"form-control d-none\\\" formControlName=\\\"id\\\" />\\n              </div>   \\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Trip name:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Trip url:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"url\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-12\\\">\\n                    <label>Trip description:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"text\\\" ></textarea>\\n                    </div>\\n                  </div>\\n                  \\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Start date:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"startDateStr\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>End date:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"endDateStr\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Price:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"price\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Price text</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"priceText\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Days:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"days\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Nights:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"nights\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <label>Activity</label>\\n                    <div class=\\\"form-group\\\">\\n                        <select class=\\\"form-control\\\" formControlName=\\\"activityId\\\" >\\n                          <option *ngFor=\\\"let activity of activities$\\\" [value]=\\\"activity.key\\\">{{activity.value}}</option>\\n                        </select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <label>Destination</label>\\n                    <div class=\\\"form-group\\\">\\n                        <select class=\\\"form-control\\\" formControlName=\\\"destinatioId\\\" >\\n                          <option *ngFor=\\\"let destination of destinations$\\\" [value]=\\\"destination.key\\\">{{destination.value}}</option>\\n                        </select>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-4\\\">\\n                    <label>Type of Trip</label>\\n                    <div class=\\\"form-group\\\">\\n                        <select class=\\\"form-control\\\" formControlName=\\\"tripTypeId\\\" >\\n                          <option *ngFor=\\\"let typeOfTrip of typesOfTrip$\\\" [value]=\\\"typeOfTrip.key\\\">{{typeOfTrip.value}}</option>\\n                        </select>\\n                    </div>\\n                  </div>\\n                  <!-- <div class=\\\"col-lg-4\\\">\\n                      <label>Event type:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <select class=\\\"form-control\\\" formControlName=\\\"type\\\">\\n                              <option [value]=\\\"type.key\\\" *ngFor=\\\"let type of eventTypes$\\\">{{type.value}}</option>\\n                          </select>\\n                      </div>\\n                  </div> -->\\n              </div>\\n              <!-- <label>Text:</label>\\n              <div class=\\\"form-group\\\">                 \\n                  <app-ngx-editor                   \\n                      [spellcheck]=\\\"true\\\" \\n                      formControlName=\\\"text\\\" \\n                      [config]=\\\"editorConfig\\\"\\n                      [imageEndPoint]=\\\"uploadImageUrl\\\"></app-ngx-editor>\\n              </div>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Created date:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"createDate\\\" formControlName=\\\"createDate\\\" readonly/>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Modification date:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"modificationDate\\\" formControlName=\\\"modificationDate\\\" readonly/>\\n                      </div>\\n                  </div>\\n              </div> -->\\n          </form>\\n        </div>\\n\\n        <!-- Nav tabs -->\\n        <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\" id=\\\"program-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#program\\\" role=\\\"tab\\\" aria-controls=\\\"program\\\" aria-selected=\\\"true\\\">Trip program</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#price\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\">Trip price</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"messages-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#faq\\\" role=\\\"tab\\\" aria-controls=\\\"messages\\\" aria-selected=\\\"false\\\">Trip FAQ</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"settings-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#photos\\\" role=\\\"tab\\\" aria-controls=\\\"settings\\\" aria-selected=\\\"false\\\">Photos</a>\\n          </li>\\n        </ul>\\n\\n        <!-- Tab panes -->\\n        <div class=\\\"tab-content pb-2\\\">\\n          <div class=\\\"tab-pane active\\\" id=\\\"program\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"program-tab\\\"> \\n            <div class=\\\"mt-3\\\">\\n              <div *ngFor=\\\"let day of programDays\\\">\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <span>Day {{day.dayNumber}}</span>\\n                  <span (click)=\\\"deleteProgramDay(day)\\\"><i class=\\\"fas fa-trash-alt\\\"></i></span>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control mb-1\\\" [(ngModel)]=\\\"day.title\\\"/>\\n                  <textarea type=\\\"text\\\" [(ngModel)]=\\\"day.description\\\"></textarea>\\n                </div>      \\n              </div>    \\n            </div>       \\n            <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewDayToProgram()\\\">Add day description</button>\\n          </div>\\n\\n          <div class=\\\"tab-pane\\\" id=\\\"price\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"profile-tab\\\">\\n            <div class=\\\"mt-3\\\">\\n              <div *ngFor=\\\"let priceItem of priceItems\\\">\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <span>Item #{{priceItem.sort}}</span>\\n                  <span (click)=\\\"deletePriceItem(priceItem)\\\"><i class=\\\"fas fa-trash-alt\\\"></i></span>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-6\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control mb-1\\\" [(ngModel)]=\\\"priceItem.title\\\"/>\\n                      </div>\\n                      <div class=\\\"col-lg-6\\\">\\n                          <span>is Included in price</span>\\n                          <input type=\\\"checkbox\\\" class=\\\"mt-2 ml-2\\\" [(ngModel)]=\\\"priceItem.isIncluded\\\"/>\\n                      </div>\\n                    </div>\\n                  <textarea type=\\\"text\\\" [(ngModel)]=\\\"priceItem.description\\\"></textarea>\\n                </div> \\n                \\n              </div>\\n              <button class=\\\"btn btn-sm btn-info\\\" (click)=\\\"addNewPriceItem()\\\">Add new price item</button>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"tab-pane\\\" id=\\\"faq\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"settings-tab\\\">\\n              <div class=\\\"mt-3\\\">\\n                <div *ngFor=\\\"let tripFAQ of tripFAQs\\\">\\n                  <div class=\\\"d-flex justify-content-between\\\">\\n                      <span>Item #{{tripFAQ.sort}}</span>\\n                      <span (click)=\\\"deleteFAQItem(tripFAQ)\\\"><i class=\\\"fas fa-trash-alt\\\"></i></span>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control mb-1\\\" [(ngModel)]=\\\"tripFAQ.title\\\"/>\\n                      <textarea type=\\\"text\\\" [(ngModel)]=\\\"tripFAQ.description\\\"></textarea>\\n                    </div>  \\n                </div>\\n                <button class=\\\"btn btn-sm btn-secondary\\\" (click)=\\\"addNewFAQItem()\\\">Add new faq item</button>\\n              </div>\\n            </div>\\n\\n          <div class=\\\"tab-pane\\\" id=\\\"photos\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"messages-tab\\\">\\n            <div class=\\\"mt-3\\\">\\n              <div *ngFor=\\\"let tripFoto of tripFotos\\\">\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <span>Item #{{tripFoto.sort}}</span>\\n                  <span (click)=\\\"deleteFotoItem(tripFoto)\\\"><i class=\\\"fas fa-trash-alt\\\"></i></span>\\n                </div>\\n                <div class=\\\"form-group\\\">                  \\n                  <input type=\\\"text\\\" class=\\\"form-control mb-1\\\" [(ngModel)]=\\\"tripFoto.title\\\"/>\\n                  <textarea type=\\\"text\\\" [(ngModel)]=\\\"tripFoto.description\\\"></textarea>\\n                </div>     \\n              </div>\\n              <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewFotoItem()\\\">Add new photo</button>  \\n            </div>\\n          </div>\\n\\n          \\n        </div>\\n\\n\\n        <div class=\\\"modal-footer pt-2 pb-0 px-0\\\">\\n          <button class=\\\"btn btn-outline-dark btn-sm\\\" type=\\\"button\\\" (click)=\\\"saveChanges()\\\">Save changes</button>\\n        </div>\\n    </div>    \\n   \\n\"","module.exports = \"<ol class=\\\"breadcrumb\\\">\\n   Trips List\\n</ol>\\n<div>    \\n    <table id=\\\"trips-list\\\" class=\\\"table table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let trip of trips$; let i = index;\\\">\\n            <th scope=\\\"row\\\">{{ i + 1}}</th>\\n            <td>{{ trip.name }}</td>\\n            <td>{{ trip.text }}</td>    \\n            <td class=\\\"text-center\\\">\\n              <a (click)=\\\"editTrip(trip.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>&nbsp;\\n              <a (click)=\\\"deleteTrip(trip.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-trash-alt\\\"></i></a>\\n            </td>     \\n          </tr>          \\n        </tbody>\\n      </table>\\n</div>\\n<div>\\n    <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewTrip()\\\">Add new trip</button>\\n</div>\\n\"","module.exports = \"\\n    <div class=\\\"modal-header py-1 px-3\\\">\\n        <h4 class=\\\"modal-title h4\\\" id=\\\"modal-basic-title\\\">TypesOfTrip</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n    </div>\\n    <div class=\\\"modal-body pt-0 pb-2\\\">\\n        <div *ngIf=\\\"currentTypesOfTrip\\\">\\n          <form [formGroup]=\\\"currentTypesOfTripForm\\\" id=\\\"currentTypesOfTripForm\\\"> \\n              <div class=\\\"form-group\\\">\\n                  <input class=\\\"form-control d-none\\\" formControlName=\\\"id\\\" />\\n              </div>   \\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Types of trip name:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Types of trip url:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"url\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-12\\\">\\n                    <label>Types of trip description:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"description\\\" ></textarea>\\n                    </div>\\n                  </div>                 \\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Seo description</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"seoDescription\\\" ></textarea>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Seo keywords</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"seoKeywords\\\" ></textarea>\\n                    </div>\\n                  </div>               \\n              </div>              \\n          </form>\\n        </div>\\n\\n\\n        <div class=\\\"modal-footer pt-2 pb-0 px-0\\\">\\n          <button class=\\\"btn btn-outline-dark btn-sm\\\" type=\\\"button\\\" (click)=\\\"saveChanges()\\\">Save changes</button>\\n        </div>\\n    </div>    \\n   \\n\"","module.exports = \"<ol class=\\\"breadcrumb\\\">\\n    Types of Trip List\\n</ol>\\n<div>    \\n    <table id=\\\"activitys-list\\\" class=\\\"table table-hover\\\">\\n        <thead>\\n            <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Actions</th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr *ngFor=\\\"let typeOfTrip of typesOfTrip$; let i = index;\\\">\\n            <th scope=\\\"row\\\">{{ i + 1}}</th>\\n            <td>{{ typeOfTrip.name }}</td>\\n            <td>{{ typeOfTrip.text }}</td>    \\n            <td class=\\\"text-center\\\">\\n                <a (click)=\\\"editTypeOfTrip(typeOfTrip.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>&nbsp;\\n                <a (click)=\\\"deleteTypeOfTrip(typeOfTrip.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-trash-alt\\\"></i></a>\\n            </td>     \\n            </tr>          \\n        </tbody>\\n        </table>\\n</div>\\n<div>\\n    <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewTypeOfTrip()\\\">Add new type of trip</button>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TripsListComponent } from './ui/trips/trips-list/trips-list.component';\nimport { DestinationsListComponent } from './ui/destinations/destinations-list/destinations-list.component';\nimport { ActivitiesListComponent } from './ui/activities/activities-list/activities-list.component';\nimport { TypesOfTripListComponent } from './ui/types-of-trip/types-of-trip-list/types-of-trip-list.component';\n\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/trips'},\n  { path: 'trips', pathMatch: 'full', component: TripsListComponent},\n  { path: 'activities', pathMatch: 'full', component: ActivitiesListComponent},\n  { path: 'destinations', pathMatch: 'full', component: DestinationsListComponent},\n  { path: 'types-of-trip', pathMatch: 'full', component: TypesOfTripListComponent},\n  { path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'AdminApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TripsListComponent } from './ui/trips/trips-list/trips-list.component';\nimport { TripEditComponent } from './ui/trips/trip-edit/trip-edit.component';\nimport { DestinationsListComponent } from './ui/destinations/destinations-list/destinations-list.component';\nimport { DestinationEditComponent } from './ui/destinations/destination-edit/destination-edit.component';\nimport { ActivitiesListComponent } from './ui/activities/activities-list/activities-list.component';\nimport { ActivityEditComponent } from './ui/activities/activity-edit/activity-edit.component';\nimport { TypesOfTripListComponent } from './ui/types-of-trip/types-of-trip-list/types-of-trip-list.component';\nimport { TypesOfTripEditComponent } from './ui/types-of-trip/types-of-trip-edit/types-of-trip-edit.component';\nimport { ConfirmModalComponent } from './ui/_modals/confirm-modal/confirm-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TripsListComponent,\n    TripEditComponent,\n    DestinationsListComponent,\n    DestinationEditComponent,\n    ActivitiesListComponent,\n    ActivityEditComponent,\n    TypesOfTripListComponent,\n    TypesOfTripEditComponent,\n    ConfirmModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  // providers: [\n  //   // {provide: APP_BASE_HREF, useValue : '/Admin/AdminHome/Index/' }\n  //   {provide: APP_BASE_HREF, useValue : '/' }\n  // ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class Activity {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    url: string;\r\n    imagePath: string;\r\n    parentId: string;\r\n    seoDescription: string;\r\n    seoKeywords: string;\r\n}\r\n","export class Destination {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    url: string;\r\n    imagePath: string;\r\n    parentId: string;\r\n    seoDescription: string;\r\n    seoKeywords: string;\r\n}\r\n","export class PriceItem {\r\n    id: string;\r\n    title: string;\r\n    sort: number;\r\n    description: string;\r\n    isIncluded: boolean;\r\n    tripId: string;\r\n}\r\n","export class ProgramDay {\r\n    id: string;\r\n    dayNumber: number;\r\n    title: string;\r\n    description: string;\r\n    tripId: string;\r\n}\r\n","export class TripFAQ {\r\n    id: string;\r\n    title: string;\r\n    sort: number;\r\n    description: string;\r\n    tripId: string;\r\n}\r\n","export class TripFoto {\r\n    id: string;\r\n    title: string;\r\n    path: string;\r\n    sort: number;\r\n    tripId: string;\r\n}\r\n","export class Trip {\r\n    id: string;\r\n    name: string;\r\n    text: string;\r\n    url: string;\r\n    imagePath: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    price: number;\r\n    priceText: string;\r\n    sale: number;\r\n    hasSale: boolean;\r\n    days: number;\r\n    nights: number;\r\n    groupSize: number;\r\n    tourDates: string;\r\n    map: string;\r\n    seoDescription: string;\r\n    seoKeywords: string;\r\n    destinatioId: string;\r\n    activityId: string;\r\n    tripTypeId: string;\r\n}\r\n","export class TypeOfTrip {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    url: string;\r\n    imagePath: string;\r\n    parentId: string;\r\n    seoDescription: string;\r\n    seoKeywords: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Activity } from '../../models/trips/activity.model';\nimport { KeyValue } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivitiesService {\n\n  constructor(private http: HttpClient) { }\n\n  getActivitiesList(): Observable<Activity[]>  {\n    return this.http.get<Activity[]>('/api/Activities/getActivitiesList/');\n  }\n\n  getActivityById(id: string): Observable<Activity>  {\n    return this.http.get<Activity>('/api/Activities/getActivityById/' + id);\n  }\n\n  createActivity(activity: Activity): Observable<Activity> {\n    return this.http.post<Activity>('/api/Activities/createActivity', activity);\n  }\n\n  updateActivity(activity: Activity): Observable<Activity> {\n    return this.http.post<Activity>('/api/Activities/updateActivity', activity);\n  }\n\n  deleteActivity(id: string): Observable<Activity[]> {\n    return this.http.get<Activity[]>('/api/Activities/deleteActivity/' + id);\n  }\n\n  getKeyValueActivityList(): Observable<KeyValue<string, string>[]>  {\n    return this.http.get<KeyValue<string, string>[]>('/api/Activities/getKeyValueActivitiesList/');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Destination } from '../../models/trips/destination.model';\nimport { KeyValue } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DestinationsService {\n\n  constructor(private http: HttpClient) { }\n\n  getDestinationsList(): Observable<Destination[]>  {\n    return this.http.get<Destination[]>('/api/Destinations/getDestinationsList/');\n  }\n\n  getDestinationById(id: string): Observable<Destination>  {\n    return this.http.get<Destination>('/api/Destinations/getDestinationById/' + id);\n  }\n\n  createDestination(activity: Destination): Observable<Destination> {\n    return this.http.post<Destination>('/api/Destinations/createDestination', activity);\n  }\n\n  updateDestination(activity: Destination): Observable<Destination> {\n    return this.http.post<Destination>('/api/Destinations/updateDestination', activity);\n  }\n\n  deleteDestination(id: string): Observable<Destination[]> {\n    return this.http.get<Destination[]>('/api/Destinations/deleteDestination/' + id);\n  }\n\n  getKeyValueActivityList(): Observable<KeyValue<string, string>[]>  {\n    return this.http.get<KeyValue<string, string>[]>('/api/Destinations/getKeyValueDestinationsList/');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Trip } from '../../models/trips/trip.model';\nimport { ProgramDay } from '../../models/trips/program-day';\nimport { PriceItem } from '../../models/trips/price-item';\nimport { TripFAQ } from '../../models/trips/trip-faq';\nimport { TripFoto } from '../../models/trips/trip-foto';\nimport { Activity } from '../../models/trips/activity.model';\nimport { Destination } from '../../models/trips/destination.model';\nimport { TypeOfTrip } from '../../models/trips/type-of-trip.model';\n\nconst SERVER_URL = 'http://localhost:20855/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TripsService {\n\n  constructor(private http: HttpClient) { }\n\n  getTripsList(): Observable<Trip[]> {\n    return this.http.get<Trip[]>('/api/Trips/getTripsList');\n  }\n\n  getTripById(tripId: string): Observable<Trip> {\n    return this.http.get<Trip>('/api/Trips/getTripById/' + tripId);\n  }\n\n  saveTrip(trip: Trip): Observable<Trip> {\n    return this.http.post<Trip>('/api/Trips/createTrip', trip);\n  }\n\n  updateTrip(trip: Trip): Observable<Trip> {\n    return this.http.post<Trip>('/api/Trips/updateTrip', trip);\n  }\n\n  deleteTrip(newsId: string): Observable<Trip[]> {\n    return this.http.get<Trip[]>('/api/Trips/deleteTrip/' + newsId);\n  }\n\n\n\n  // Program Days methods\n  getProgramDaysByTripId(tripId: string): Observable<ProgramDay[]>  {\n    return this.http.get<ProgramDay[]>('/api/Trips/GetProgramDaysByTripId/' + tripId);\n  }\n  createProgramDay(programDay: ProgramDay): Observable<ProgramDay> {\n    return this.http.post<ProgramDay>('/api/Trips/createProgramDay', programDay);\n  }\n  updateProgramDay(programDay: ProgramDay): Observable<ProgramDay> {\n    return this.http.post<ProgramDay>('/api/Trips/updateProgramDay', programDay);\n  }\n  deleteProgramDay(programDayId: string): Observable<ProgramDay> {\n    return this.http.get<ProgramDay>('/api/Trips/deleteProgramDay/' + programDayId);\n  }\n\n  // Trip prices methods\n  getTripPricesByTripId(tripId: string): Observable<PriceItem[]>  {\n    return this.http.get<PriceItem[]>('/api/Trips/getTripPricesByTripId/' + tripId);\n  }\n  createTripPrice(tripPrice: PriceItem): Observable<PriceItem> {\n    return this.http.post<PriceItem>('/api/Trips/createTripPriceDesc', tripPrice);\n  }\n  updateTripPrice(tripPrice: PriceItem): Observable<PriceItem> {\n    return this.http.post<PriceItem>('/api/Trips/updateTripPriceDesc', tripPrice);\n  }\n  deleteTripPrice(tripPriceId: string): Observable<PriceItem> {\n    return this.http.get<PriceItem>('/api/Trips/deleteTripPriceDesc/' + tripPriceId);\n  }\n\n   // Trip FAQ methods\n   getTripFAQByTripId(tripId: string): Observable<TripFAQ[]>  {\n    return this.http.get<TripFAQ[]>('/api/Trips/getTripFAQByTripId/' + tripId);\n  }\n  createTripFAQ(tripPrice: TripFAQ): Observable<TripFAQ> {\n    return this.http.post<TripFAQ>('/api/Trips/createTripFAQ', tripPrice);\n  }\n  updateTripFAQ(tripPrice: TripFAQ): Observable<TripFAQ> {\n    return this.http.post<TripFAQ>('/api/Trips/updateTripFAQ', tripPrice);\n  }\n  deleteTripFAQ(tripPriceId: string): Observable<TripFAQ> {\n    return this.http.get<TripFAQ>('/api/Trips/deleteTripFAQ/' + tripPriceId);\n  }\n\n  // Trip prices methods\n  getTripFotosByTripId(tripId: string): Observable<TripFoto[]>  {\n    return this.http.get<TripFoto[]>('/api/Trips/getTripFotosByTripId/' + tripId);\n  }\n  createTripFoto(tripFoto: TripFoto): Observable<TripFoto> {\n    return this.http.post<TripFoto>('/api/Trips/createTripFoto', tripFoto);\n  }\n  updateTripFoto(tripFoto: TripFoto): Observable<TripFoto> {\n    return this.http.post<TripFoto>('/api/Trips/updateTripFoto', tripFoto);\n  }\n  deleteTripFoto(tripFotoId: string): Observable<TripFoto> {\n    return this.http.get<TripFoto>('/api/Trips/deleteTripFoto/' + tripFotoId);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TypeOfTrip } from '../../models/trips/type-of-trip.model';\nimport { KeyValue } from '@angular/common';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TypesOfTripService {\n\n  constructor(private http: HttpClient) { }\n\n  getTypesOfTripList(): Observable<TypeOfTrip[]>  {\n    return this.http.get<TypeOfTrip[]>('/api/TypesOfTrip/getTypesOfTripList/');\n  }\n\n  getTypeOfTripById(id: string): Observable<TypeOfTrip>  {\n    return this.http.get<TypeOfTrip>('/api/TypesOfTrip/getTypeOfTripById/' + id);\n  }\n\n  createTypeOfTrip(activity: TypeOfTrip): Observable<TypeOfTrip> {\n    return this.http.post<TypeOfTrip>('/api/TypesOfTrip/createTypeOfTrip', activity);\n  }\n\n  updateTypeOfTrip(activity: TypeOfTrip): Observable<TypeOfTrip> {\n    return this.http.post<TypeOfTrip>('/api/TypesOfTrip/updateTypeOfTrip', activity);\n  }\n\n  deleteTypeOfTrip(id: string): Observable<TypeOfTrip[]> {\n    return this.http.get<TypeOfTrip[]>('/api/TypesOfTrip/deleteTypeOfTrip/' + id);\n  }\n\n  getKeyValueTypesOfTripList(): Observable<KeyValue<string, string>[]>  {\n    return this.http.get<KeyValue<string, string>[]>('/api/TypesOfTrip/getKeyValueTypeOfTripsList/');\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgbActiveModal, NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-confirm-modal',\n  templateUrl: './confirm-modal.component.html'\n})\nexport class ConfirmModalComponent implements OnInit {\n  @Input() text: string;\n  @Output() confirmText: EventEmitter<string> = new EventEmitter();\n\n  constructor(public activeModal: NgbActiveModal) {}\n\n  ngOnInit() {\n  }\n\n  closeModal(answer: string) {\n    this.activeModal.dismiss();\n    this.confirmText.emit(answer);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivitiesService } from '../../../core/services/trips/activities.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { Activity } from '../../../core/models//trips/activity.model';\nimport { ActivityEditComponent } from '../activity-edit/activity-edit.component';\nimport { ConfirmModalComponent } from '../../_modals/confirm-modal/confirm-modal.component';\n\n\n@Component({\n  selector: 'app-activities-list',\n  templateUrl: './activities-list.component.html'\n})\nexport class ActivitiesListComponent implements OnInit {\n\n  activities$: Activity[];\n\n  subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private activitiesService: ActivitiesService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.subscriptions.add(this.activitiesService.getActivitiesList().subscribe(\n      res => {\n        this.activities$ = res;\n      }\n    ));\n  }\n\n  addNewActivity() {\n    const modalRef = this.modalService.open(ActivityEditComponent, {size: 'xl'});\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      // this.trips$ = receivedEntry;\n      this.activitiesService.getActivitiesList().subscribe(\n        res => {\n          this.activities$ = res;\n        }\n      );\n    });\n  }\n\n  editActivity(id: string) {\n    const modalRef = this.modalService.open(ActivityEditComponent, {size: 'xl'});\n    modalRef.componentInstance.activityId = id;\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      this.activitiesService.getActivitiesList().subscribe(\n        res => {\n          this.activities$ = res;\n        }\n      );\n    });\n  }\n\n  deleteActivity(id: string) {\n    const modalRef = this.modalService.open(ConfirmModalComponent, {size: 'lg'});\n    modalRef.componentInstance.text = 'Are you sure, you want to delete current item?';\n    modalRef.componentInstance.confirmText.subscribe((receivedEntry) => {\n      if (receivedEntry === 'Yes') {\n        this.activitiesService.deleteActivity(id).subscribe(\n          res => {\n            this.activities$ = res;\n          }\n        );\n      }\n    });\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { ActivitiesService } from '../../../core/services/trips/activities.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Activity } from '../../../core/models/trips/activity.model';\n\n@Component({\n  selector: 'app-activity-edit',\n  templateUrl: './activity-edit.component.html'\n})\nexport class ActivityEditComponent implements OnInit {\n  @Input() activityId: string;\n  @Output() updateList: EventEmitter<any> = new EventEmitter();\n  currentActivity: Activity;\n  currentActivityForm: FormGroup;\n\n\n  startDateStr: string;\n  endDateStr: string;\n\n  constructor(\n    private activitiesService: ActivitiesService,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    public modal: NgbActiveModal\n  ) { }\n\n  ngOnInit() {\n    const datePipe = new DatePipe('en-US');\n    this.initcurrentActivity();\n    if (this.activityId) {\n      this.activitiesService.getActivityById(this.activityId).subscribe(\n        res => {\n          this.currentActivity = res;\n          this.loadcurrentActivity();\n          this.cdr.detectChanges();\n        }\n      );\n    } else {\n      this.currentActivity = new Activity();\n    }\n  }\n\n  initcurrentActivity() {\n    this.currentActivityForm = this.fb.group({\n      id: [''],\n      name: [''],\n      description: [''],\n      url: [''],\n      parentId: [''],\n      imagePath: [''],\n      seoDescription: [''],\n      seoKeywords: ['']\n    });\n  }\n\n  loadcurrentActivity() {\n    this.currentActivityForm = this.fb.group({\n      id: [this.currentActivity.id],\n      name: [this.currentActivity.name],\n      description: [this.currentActivity.description],\n      url: [this.currentActivity.url],\n      imagePath: [this.currentActivity.imagePath],\n      parentId: [this.currentActivity.parentId],\n      seoDescription: [this.currentActivity.seoDescription],\n      seoKeywords: [this.currentActivity.seoKeywords]\n    });\n  }\n\n  saveChanges() {\n    const newActivity = new Activity();\n    // tslint:disable-next-line:no-string-literal\n    newActivity.id = this.currentActivity.id;\n    newActivity.name = this.currentActivityForm.controls.name.value;\n    newActivity.description = this.currentActivityForm.controls.description.value;\n    newActivity.url = this.currentActivityForm.controls.url.value;\n    newActivity.imagePath = this.currentActivityForm.controls.imagePath.value;\n    newActivity.seoDescription = this.currentActivityForm.controls.seoDescription.value;\n    newActivity.seoKeywords = this.currentActivityForm.controls.seoKeywords.value;\n    newActivity.parentId = this.currentActivityForm.controls.parentId.value;\n\n    if (this.currentActivity.id) {\n      this.activitiesService.updateActivity(newActivity).subscribe(\n        (res: Activity) => {\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    } else {\n      this.activitiesService.createActivity(newActivity).subscribe(\n        (res: Activity) => {\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    }\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { DestinationsService } from '../../../core/services/trips/destinations.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { Destination } from '../../../core/models/trips/destination.model';\n\n@Component({\n  selector: 'app-destination-edit',\n  templateUrl: './destination-edit.component.html'\n})\nexport class DestinationEditComponent implements OnInit {\n  @Input() destinationId: string;\n  @Output() updateList: EventEmitter<any> = new EventEmitter();\n  currentDestination: Destination;\n  currentDestinationForm: FormGroup;\n\n\n  startDateStr: string;\n  endDateStr: string;\n\n  constructor(\n    private destinationsService: DestinationsService,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    public modal: NgbActiveModal\n  ) { }\n\n  ngOnInit() {\n    const datePipe = new DatePipe('en-US');\n    this.initcurrentDestination();\n    if (this.destinationId) {\n      this.destinationsService.getDestinationById(this.destinationId).subscribe(\n        res => {\n          this.currentDestination = res;\n          this.loadcurrentDestination();\n          this.cdr.detectChanges();\n        }\n      );\n    } else {\n      this.currentDestination = new Destination();\n    }\n  }\n\n  initcurrentDestination() {\n    this.currentDestinationForm = this.fb.group({\n      id: [''],\n      name: [''],\n      description: [''],\n      url: [''],\n      parentId: [''],\n      imagePath: [''],\n      seoDescription: [''],\n      seoKeywords: ['']\n    });\n  }\n\n  loadcurrentDestination() {\n    this.currentDestinationForm = this.fb.group({\n      id: [this.currentDestination.id],\n      name: [this.currentDestination.name],\n      description: [this.currentDestination.description],\n      url: [this.currentDestination.url],\n      imagePath: [this.currentDestination.imagePath],\n      parentId: [this.currentDestination.parentId],\n      seoDescription: [this.currentDestination.seoDescription],\n      seoKeywords: [this.currentDestination.seoKeywords]\n    });\n  }\n\n  saveChanges() {\n    const newDestination = new Destination();\n    // tslint:disable-next-line:no-string-literal\n    newDestination.id = this.currentDestination.id;\n    newDestination.name = this.currentDestinationForm.controls.name.value;\n    newDestination.description = this.currentDestinationForm.controls.description.value;\n    newDestination.url = this.currentDestinationForm.controls.url.value;\n    newDestination.imagePath = this.currentDestinationForm.controls.imagePath.value;\n    newDestination.seoDescription = this.currentDestinationForm.controls.seoDescription.value;\n    newDestination.seoKeywords = this.currentDestinationForm.controls.seoKeywords.value;\n    newDestination.parentId = this.currentDestinationForm.controls.parentId.value;\n\n    if (this.currentDestination.id) {\n      this.destinationsService.updateDestination(newDestination).subscribe(\n        (res: Destination) => {\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    } else {\n      this.destinationsService.createDestination(newDestination).subscribe(\n        (res: Destination) => {\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { DestinationsService } from '../../../core/services/trips/destinations.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { Destination } from '../../../core/models//trips/destination.model';\nimport { DestinationEditComponent } from '../destination-edit/destination-edit.component';\nimport { ConfirmModalComponent } from '../../_modals/confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: 'app-destinations-list',\n  templateUrl: './destinations-list.component.html'\n})\nexport class DestinationsListComponent implements OnInit {\n\n  destinations$: Destination[];\n\n  subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private destinationsService: DestinationsService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.subscriptions.add(this.destinationsService.getDestinationsList().subscribe(\n      res => {\n        this.destinations$ = res;\n      }\n    ));\n  }\n\n  addNewDestination() {\n    const modalRef = this.modalService.open(DestinationEditComponent, {size: 'xl'});\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      // this.trips$ = receivedEntry;\n      this.destinationsService.getDestinationsList().subscribe(\n        res => {\n          this.destinations$ = res;\n        }\n      );\n    });\n  }\n\n  editDestination(id: string) {\n    const modalRef = this.modalService.open(DestinationEditComponent, {size: 'xl'});\n    modalRef.componentInstance.destinationId = id;\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      this.destinationsService.getDestinationsList().subscribe(\n        res => {\n          this.destinations$ = res;\n        }\n      );\n    });\n  }\n\n  deleteDestination(id: string) {\n    const modalRef = this.modalService.open(ConfirmModalComponent, {size: 'lg'});\n    modalRef.componentInstance.text = 'Are you sure, you want to delete current item?';\n    modalRef.componentInstance.confirmText.subscribe((receivedEntry) => {\n      if (receivedEntry === 'Yes') {\n        this.destinationsService.deleteDestination(id).subscribe(\n          res => {\n            this.destinations$ = res;\n          }\n        );\n      }\n    });\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { TripsService } from '../../../core/services/trips/trips.service';\nimport { ActivitiesService } from '../../../core/services/trips/activities.service';\nimport { DestinationsService } from '../../../core/services/trips/destinations.service';\nimport { TypesOfTripService } from '../../../core/services/trips/types-of-trip.service';\nimport { NgbModal, NgbActiveModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DatePipe, KeyValue } from '@angular/common';\n\nimport { Trip } from '../../../core/models/trips/trip.model';\nimport { ProgramDay } from '../../../core/models/trips/program-day';\nimport { PriceItem } from '../../../core/models/trips/price-item';\nimport { TripFAQ } from '../../../core/models/trips/trip-faq';\nimport { TripFoto } from '../../../core/models/trips/trip-foto';\n\n@Component({\n  selector: 'app-trip-edit',\n  templateUrl: './trip-edit.component.html'\n})\nexport class TripEditComponent implements OnInit {\n  @Input() tripId: string;\n  @Output() updateList: EventEmitter<any> = new EventEmitter();\n  currentTrip: Trip;\n  currentTripForm: FormGroup;\n\n  programDays: ProgramDay[] = [];\n  priceItems: PriceItem[] = [];\n  tripFAQs: TripFAQ[] = [];\n  tripFotos: TripFoto[] = [];\n\n  startDateStr: string;\n  endDateStr: string;\n\n  activities$: KeyValue<string, string>[] = [];\n  destinations$: KeyValue<string, string>[] = [];\n  typesOfTrip$: KeyValue<string, string>[] = [];\n\n  constructor(\n    private tripsService: TripsService,\n    private activitiesService: ActivitiesService,\n    private destinationsService: DestinationsService,\n    private typesOfTripService: TypesOfTripService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    public modal: NgbActiveModal\n  ) { }\n\n  ngOnInit() {\n    const datePipe = new DatePipe('en-US');\n    this.initcurrentTrip();\n    this.loadActivities();\n    this.loadDestinations();\n    this.loadTypesOfTrip();\n    if (this.tripId) {\n      this.tripsService.getTripById(this.tripId).subscribe(\n        res => {\n          this.currentTrip = res;\n          this.startDateStr = datePipe.transform(this.currentTrip.startDate, 'MM/dd/yyyy');\n          this.endDateStr = datePipe.transform(this.currentTrip.endDate, 'MM/dd/yyyy');\n          this.loadcurrentTrip();\n          this.loadProgramDays();\n          this.loadPriceItems();\n          this.loadFAQItems();\n          this.loadPhotos();\n          this.cdr.detectChanges();\n        }\n      );\n    } else {\n      this.currentTrip = new Trip();\n    }\n  }\n\n  initcurrentTrip() {\n    this.currentTripForm = this.fb.group({\n      id: [''],\n      name: [''],\n      text: [''],\n      url: [''],\n      imagePath: [''],\n      startDateStr: [''],\n      endDateStr: [''],\n      price: [''],\n      priceText: [''],\n      sale: [''],\n      hasSale: [''],\n      days: [''],\n      nights: [''],\n      groupSize: [''],\n      tourDates: [''],\n      seoDescription: [''],\n      seoKeywords: [''],\n      destinatioId: [''],\n      activityId: [''],\n      tripTypeId: ['']\n    });\n  }\n\n  loadcurrentTrip() {\n    this.currentTripForm = this.fb.group({\n      id: [this.currentTrip.id],\n      name: [this.currentTrip.name],\n      text: [this.currentTrip.text],\n      url: [this.currentTrip.url],\n      imagePath: [this.currentTrip.imagePath],\n      startDateStr: [this.startDateStr],\n      endDateStr: [this.endDateStr],\n      price: [this.currentTrip.price],\n      priceText: [this.currentTrip.priceText],\n      sale: [this.currentTrip.sale],\n      hasSale: [this.currentTrip.hasSale],\n      days: [this.currentTrip.days],\n      nights: [this.currentTrip.nights],\n      groupSize: [this.currentTrip.groupSize],\n      tourDates: [this.currentTrip.tourDates],\n      seoDescription: [this.currentTrip.seoDescription],\n      seoKeywords: [this.currentTrip.seoKeywords],\n      destinatioId: [this.currentTrip.destinatioId],\n      activityId: [this.currentTrip.activityId],\n      tripTypeId: [this.currentTrip.tripTypeId]\n    });\n  }\n\n  loadActivities() {\n    this.activitiesService.getKeyValueActivityList().subscribe(\n      res => {\n        this.activities$ = res;\n      }\n    );\n  }\n  loadDestinations() {\n    this.destinationsService.getKeyValueActivityList().subscribe(\n      res => {\n        this.destinations$ = res;\n      }\n    );\n  }\n  loadTypesOfTrip() {\n    this.typesOfTripService.getKeyValueTypesOfTripList().subscribe(\n      res => {\n        this.typesOfTrip$ = res;\n      }\n    );\n  }\n\n  loadProgramDays() {\n    this.tripsService.getProgramDaysByTripId(this.tripId).subscribe(\n      res => {\n        this.programDays = res;\n      }\n    );\n  }\n  loadPriceItems() {\n    this.tripsService.getTripPricesByTripId(this.tripId).subscribe(\n      res => {\n        this.priceItems = res;\n      }\n    );\n  }\n  loadFAQItems() {\n    this.tripsService.getTripFAQByTripId(this.tripId).subscribe(\n      res => {\n        this.tripFAQs = res;\n      }\n    );\n  }\n  loadPhotos() {\n    this.tripsService.getTripFotosByTripId(this.tripId).subscribe(\n      res => {\n        this.tripFotos = res;\n      }\n    );\n  }\n\n  // Program day methods\n  addNewDayToProgram() {\n    const newProgramDay = new ProgramDay();\n    newProgramDay.dayNumber = this.programDays.length + 1;\n    this.programDays.push(newProgramDay);\n  }\n  deleteProgramDay(programDay: ProgramDay) {\n    if (programDay.id !== '' && programDay.id !== undefined) {\n      this.programDays.splice(programDay.dayNumber - 1, 1);\n    }\n  }\n  saveProgrmDays(currentTrip: Trip) {\n    if (this.currentTrip.id !== '' && this.currentTrip.id !== undefined) {\n      // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.programDays.length; i++) {\n          this.tripsService.updateProgramDay(this.programDays[i]).subscribe();\n        }\n      } else {\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.programDays.length; i++) {\n          this.programDays[i].tripId = currentTrip.id;\n          this.tripsService.createProgramDay(this.programDays[i]).subscribe();\n        }\n    }\n  }\n\n  // Price Items methods\n  addNewPriceItem() {\n    const newPriceItem = new PriceItem();\n    newPriceItem.sort = this.priceItems.length + 1;\n    this.priceItems.push(newPriceItem);\n  }\n  deletePriceItem(priceItem: PriceItem) {\n    if (priceItem.id !== '' && priceItem.id !== undefined) {\n      this.priceItems.splice(priceItem.sort - 1, 1);\n    }\n  }\n  savePriceItems(currentTrip: Trip) {\n    if (this.currentTrip.id !== '' && this.currentTrip.id !== undefined) {\n      // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.priceItems.length; i++) {\n          this.priceItems[i].isIncluded === null ? this.priceItems[i].isIncluded = false : this.priceItems[i].isIncluded = true;\n          this.tripsService.updateTripPrice(this.priceItems[i]).subscribe();\n        }\n      } else {\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.priceItems.length; i++) {\n          this.priceItems[i].tripId = currentTrip.id;\n          this.tripsService.createTripPrice(this.priceItems[i]).subscribe();\n        }\n    }\n  }\n\n\n  // FAQ Items methods\n  addNewFAQItem() {\n    const newTripFAQ = new TripFAQ();\n    newTripFAQ.sort = this.tripFAQs.length + 1;\n    this.tripFAQs.push(newTripFAQ);\n  }\n  deleteFAQItem(tripFAQ: TripFAQ) {\n    if (tripFAQ.id !== '' && tripFAQ.id !== undefined) {\n      this.tripFAQs.splice(tripFAQ.sort - 1, 1);\n    }\n  }\n  saveFAQItems(currentTrip: Trip) {\n    if (this.currentTrip.id !== '' && this.currentTrip.id !== undefined) {\n      // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.tripFAQs.length; i++) {\n          this.tripsService.updateTripFAQ(this.tripFAQs[i]).subscribe();\n        }\n      } else {\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.tripFAQs.length; i++) {\n          this.tripFAQs[i].tripId = currentTrip.id;\n          this.tripsService.createTripFAQ(this.tripFAQs[i]).subscribe();\n        }\n    }\n  }\n\n\n  // Foto Items methods\n  addNewFotoItem() {\n    const newTripFoto = new TripFoto();\n    newTripFoto.sort = this.tripFotos.length + 1;\n    this.tripFotos.push(newTripFoto);\n  }\n  deleteFotoItem(tripFoto: TripFoto) {\n    if (tripFoto.id !== '' && tripFoto.id !== undefined) {\n      this.tripFotos.splice(tripFoto.sort - 1, 1);\n    }\n  }\n  saveFotoItems(currentTrip: Trip) {\n    if (this.currentTrip.id !== '' && this.currentTrip.id !== undefined) {\n      // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.tripFotos.length; i++) {\n          this.tripsService.updateTripFoto(this.tripFotos[i]).subscribe();\n        }\n      } else {\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.tripFotos.length; i++) {\n          this.tripFotos[i].tripId = currentTrip.id;\n          this.tripsService.createTripFoto(this.tripFotos[i]).subscribe();\n        }\n    }\n  }\n\n\n  saveChanges() {\n    const newTrip = new Trip();\n    // tslint:disable-next-line:no-string-literal\n    newTrip.id = this.currentTripForm.controls.id.value;\n    newTrip.name = this.currentTripForm.controls.name.value;\n    newTrip.text = this.currentTripForm.controls.text.value;\n    newTrip.url = this.currentTripForm.controls.url.value;\n    newTrip.imagePath = this.currentTripForm.controls.imagePath.value;\n    newTrip.startDate = this.currentTripForm.controls.startDateStr.value;\n    newTrip.endDate = this.currentTripForm.controls.endDateStr.value;\n    newTrip.price = this.currentTripForm.controls.price.value;\n    newTrip.priceText = this.currentTripForm.controls.priceText.value;\n    newTrip.sale = this.currentTripForm.controls.sale.value;\n    newTrip.hasSale = this.currentTripForm.controls.hasSale.value;\n    newTrip.days = this.currentTripForm.controls.days.value;\n    newTrip.nights = this.currentTripForm.controls.nights.value;\n    newTrip.groupSize = this.currentTripForm.controls.groupSize.value;\n    newTrip.tourDates = this.currentTripForm.controls.tourDates.value;\n    newTrip.seoDescription = this.currentTripForm.controls.seoDescription.value;\n    newTrip.seoKeywords = this.currentTripForm.controls.seoKeywords.value;\n    newTrip.destinatioId = this.currentTripForm.controls.destinatioId.value;\n    newTrip.activityId = this.currentTripForm.controls.activityId.value;\n    newTrip.tripTypeId = this.currentTripForm.controls.tripTypeId.value;\n    if (this.currentTrip.id) {\n      this.tripsService.updateTrip(newTrip).subscribe(\n        (res: Trip) => {\n          this.saveProgrmDays(res);\n          this.savePriceItems(res);\n          this.saveFAQItems(res);\n          this.saveFotoItems(res);\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    } else {\n      this.tripsService.saveTrip(newTrip).subscribe(\n        (res: Trip) => {\n          this.saveProgrmDays(res);\n          this.savePriceItems(res);\n          this.saveFAQItems(res);\n          this.saveFotoItems(res);\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TripsService } from '../../../core/services/trips/trips.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { Trip } from '../../../core/models/trips/trip.model';\nimport { TripEditComponent } from '../trip-edit/trip-edit.component';\nimport { ConfirmModalComponent } from '../../_modals/confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: 'app-trips',\n  templateUrl: './trips-list.component.html'\n})\nexport class TripsListComponent implements OnInit {\n  trips$: Trip[];\n\n  subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private tripsService: TripsService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.subscriptions.add(this.tripsService.getTripsList().subscribe(\n      res => {\n        this.trips$ = res;\n      }\n    ));\n  }\n\n  addNewTrip() {\n    const modalRef = this.modalService.open(TripEditComponent, {size: 'xl'});\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      // this.trips$ = receivedEntry;\n      this.tripsService.getTripsList().subscribe(\n        res => {\n          this.trips$ = res;\n        }\n      );\n    });\n  }\n\n  editTrip(id: string) {\n    const modalRef = this.modalService.open(TripEditComponent, {size: 'xl'});\n    modalRef.componentInstance.tripId = id;\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      this.tripsService.getTripsList().subscribe(\n        res => {\n          this.trips$ = res;\n        }\n      );\n    });\n  }\n\n  deleteTrip(id: string) {\n    const modalRef = this.modalService.open(ConfirmModalComponent, {size: 'lg'});\n    modalRef.componentInstance.text = 'Are you sure, you want to delete current item?';\n    modalRef.componentInstance.confirmText.subscribe((receivedEntry) => {\n      if (receivedEntry === 'Yes') {\n        this.tripsService.deleteTrip(id).subscribe(\n          res => {\n            this.trips$ = res;\n          }\n        );\n      }\n    });\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { TypesOfTripService } from '../../../core/services/trips/types-of-trip.service';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\nimport { TypeOfTrip } from '../../../core/models/trips/type-of-trip.model';\n\n\n@Component({\n  selector: 'app-types-of-trip-edit',\n  templateUrl: './types-of-trip-edit.component.html'\n})\nexport class TypesOfTripEditComponent implements OnInit {\n  @Input() typesOfTripId: string;\n  @Output() updateList: EventEmitter<any> = new EventEmitter();\n  currentTypesOfTrip: TypeOfTrip;\n  currentTypesOfTripForm: FormGroup;\n\n\n  startDateStr: string;\n  endDateStr: string;\n\n  constructor(\n    private typesOfTripService: TypesOfTripService,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    public modal: NgbActiveModal\n  ) { }\n\n  ngOnInit() {\n    const datePipe = new DatePipe('en-US');\n    this.initcurrentTypesOfTrip();\n    if (this.typesOfTripId) {\n      this.typesOfTripService.getTypeOfTripById(this.typesOfTripId).subscribe(\n        res => {\n          this.currentTypesOfTrip = res;\n          this.loadcurrentTypesOfTrip();\n          this.cdr.detectChanges();\n        }\n      );\n    } else {\n      this.currentTypesOfTrip = new TypeOfTrip();\n    }\n  }\n\n  initcurrentTypesOfTrip() {\n    this.currentTypesOfTripForm = this.fb.group({\n      id: [''],\n      name: [''],\n      description: [''],\n      url: [''],\n      parentId: [''],\n      imagePath: [''],\n      seoDescription: [''],\n      seoKeywords: ['']\n    });\n  }\n\n  loadcurrentTypesOfTrip() {\n    this.currentTypesOfTripForm = this.fb.group({\n      id: [this.currentTypesOfTrip.id],\n      name: [this.currentTypesOfTrip.name],\n      description: [this.currentTypesOfTrip.description],\n      url: [this.currentTypesOfTrip.url],\n      imagePath: [this.currentTypesOfTrip.imagePath],\n      parentId: [this.currentTypesOfTrip.parentId],\n      seoDescription: [this.currentTypesOfTrip.seoDescription],\n      seoKeywords: [this.currentTypesOfTrip.seoKeywords]\n    });\n  }\n\n  saveChanges() {\n    const newTypesOfTrip = new TypeOfTrip();\n    // tslint:disable-next-line:no-string-literal\n    newTypesOfTrip.id = this.currentTypesOfTrip.id;\n    newTypesOfTrip.name = this.currentTypesOfTripForm.controls.name.value;\n    newTypesOfTrip.description = this.currentTypesOfTripForm.controls.description.value;\n    newTypesOfTrip.url = this.currentTypesOfTripForm.controls.url.value;\n    newTypesOfTrip.imagePath = this.currentTypesOfTripForm.controls.imagePath.value;\n    newTypesOfTrip.seoDescription = this.currentTypesOfTripForm.controls.seoDescription.value;\n    newTypesOfTrip.seoKeywords = this.currentTypesOfTripForm.controls.seoKeywords.value;\n    newTypesOfTrip.parentId = this.currentTypesOfTripForm.controls.parentId.value;\n\n    if (this.currentTypesOfTrip.id) {\n      this.typesOfTripService.updateTypeOfTrip(newTypesOfTrip).subscribe(\n        (res: TypeOfTrip) => {\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    } else {\n      this.typesOfTripService.createTypeOfTrip(newTypesOfTrip).subscribe(\n        (res: TypeOfTrip) => {\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    }\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { TypesOfTripService } from '../../../core/services/trips/types-of-trip.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { TypeOfTrip } from '../../../core/models/trips/type-of-trip.model';\nimport { TypesOfTripEditComponent } from '../types-of-trip-edit/types-of-trip-edit.component';\nimport { ConfirmModalComponent } from '../../_modals/confirm-modal/confirm-modal.component';\n\n@Component({\n  selector: 'app-types-of-trip-list',\n  templateUrl: './types-of-trip-list.component.html'\n})\nexport class TypesOfTripListComponent implements OnInit {\n\n  typesOfTrip$: TypeOfTrip[];\n\n  subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private typesOfTripService: TypesOfTripService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.subscriptions.add(this.typesOfTripService.getTypesOfTripList().subscribe(\n      res => {\n        this.typesOfTrip$ = res;\n      }\n    ));\n  }\n\n  addNewTypeOfTrip() {\n    const modalRef = this.modalService.open(TypesOfTripEditComponent, {size: 'xl'});\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      // this.trips$ = receivedEntry;\n      this.typesOfTripService.getTypesOfTripList().subscribe(\n        res => {\n          this.typesOfTrip$ = res;\n        }\n      );\n    });\n  }\n\n  editTypeOfTrip(id: string) {\n    const modalRef = this.modalService.open(TypesOfTripEditComponent, {size: 'xl'});\n    modalRef.componentInstance.typesOfTripId = id;\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      this.typesOfTripService.getTypesOfTripList().subscribe(\n        res => {\n          this.typesOfTrip$ = res;\n        }\n      );\n    });\n  }\n\n  deleteTypeOfTrip(id: string) {\n    const modalRef = this.modalService.open(ConfirmModalComponent, {size: 'lg'});\n    modalRef.componentInstance.text = 'Are you sure, you want to delete current item?';\n    modalRef.componentInstance.confirmText.subscribe((receivedEntry) => {\n      if (receivedEntry === 'Yes') {\n        this.typesOfTripService.deleteTypeOfTrip(id).subscribe(\n          res => {\n            this.typesOfTrip$ = res;\n          }\n        );\n      }\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}