{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/ui/destinations/destinations.component.html","webpack:///./src/app/ui/trips/trip-edit/trip-edit.component.html","webpack:///./src/app/ui/trips/trips-list/trips-list.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/models/program-day.ts","webpack:///./src/app/core/models/trip.model.ts","webpack:///./src/app/core/services/trips.service.ts","webpack:///./src/app/ui/destinations/destinations.component.ts","webpack:///./src/app/ui/trips/trip-edit/trip-edit.component.ts","webpack:///./src/app/ui/trips/trips-list/trips-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\n\\n\"","module.exports = \"<div>\\n    <table class=\\\"table table-striped table-sm\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\"># </th>\\n            <th scope=\\\"col\\\">Имя</th>\\n            <th scope=\\\"col\\\">Фамилия</th>\\n            <th scope=\\\"col\\\">Username</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr>\\n            <th scope=\\\"row\\\">1</th>\\n            <td>Mark</td>\\n            <td>Otto</td>\\n            <td>@mdo</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">2</th>\\n            <td>Jacob</td>\\n            <td>Thornton</td>\\n            <td>@fat</td>\\n          </tr>\\n          <tr>\\n            <th scope=\\\"row\\\">3</th>\\n            <td>Larry</td>\\n            <td>the Bird</td>\\n            <td>@twitter</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n</div>\\n\"","module.exports = \"\\n    <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title h2\\\" id=\\\"modal-basic-title\\\">Trip</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div *ngIf=\\\"currentTrip\\\">\\n          <form [formGroup]=\\\"currentTripForm\\\"> \\n              <div class=\\\"form-group\\\">\\n                  <input class=\\\"form-control d-none\\\" formControlName=\\\"id\\\" />\\n              </div>   \\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-12\\\">\\n                      <label>Trip name:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" formControlName=\\\"name\\\" />\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-12\\\">\\n                    <label>Trip description:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <textarea class=\\\"form-control\\\" formControlName=\\\"text\\\" ></textarea>\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-12\\\">\\n                    <label>Trip url:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"url\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Start date:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"startDateStr\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>End date:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"endDateStr\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Price:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"price\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Price text</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"priceText\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Days:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"days\\\" />\\n                    </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                    <label>Nights:</label>\\n                    <div class=\\\"form-group\\\">\\n                        <input class=\\\"form-control\\\" formControlName=\\\"nights\\\" />\\n                    </div>\\n                  </div>\\n                  <!-- <div class=\\\"col-lg-4\\\">\\n                      <label>Event type:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <select class=\\\"form-control\\\" formControlName=\\\"type\\\">\\n                              <option [value]=\\\"type.key\\\" *ngFor=\\\"let type of eventTypes$\\\">{{type.value}}</option>\\n                          </select>\\n                      </div>\\n                  </div> -->\\n              </div>\\n              <!-- <label>Text:</label>\\n              <div class=\\\"form-group\\\">                 \\n                  <app-ngx-editor                   \\n                      [spellcheck]=\\\"true\\\" \\n                      formControlName=\\\"text\\\" \\n                      [config]=\\\"editorConfig\\\"\\n                      [imageEndPoint]=\\\"uploadImageUrl\\\"></app-ngx-editor>\\n              </div>\\n              <div class=\\\"row\\\">\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Created date:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"createDate\\\" formControlName=\\\"createDate\\\" readonly/>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"col-lg-6\\\">\\n                      <label>Modification date:</label>\\n                      <div class=\\\"form-group\\\">\\n                          <input class=\\\"form-control\\\" name=\\\"modificationDate\\\" formControlName=\\\"modificationDate\\\" readonly/>\\n                      </div>\\n                  </div>\\n              </div> -->\\n          </form>\\n        </div>\\n\\n        <!-- Nav tabs -->\\n        <ul class=\\\"nav nav-tabs\\\" id=\\\"myTab\\\" role=\\\"tablist\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link active\\\" id=\\\"program-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#program\\\" role=\\\"tab\\\" aria-controls=\\\"program\\\" aria-selected=\\\"true\\\">Trip program</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"profile-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#price\\\" role=\\\"tab\\\" aria-controls=\\\"profile\\\" aria-selected=\\\"false\\\">Trip price</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"messages-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#faq\\\" role=\\\"tab\\\" aria-controls=\\\"messages\\\" aria-selected=\\\"false\\\">Trip FAQ</a>\\n          </li>\\n          <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" id=\\\"settings-tab\\\" data-toggle=\\\"tab\\\" href=\\\"#photos\\\" role=\\\"tab\\\" aria-controls=\\\"settings\\\" aria-selected=\\\"false\\\">Photos</a>\\n          </li>\\n        </ul>\\n\\n        <!-- Tab panes -->\\n        <div class=\\\"tab-content pb-4\\\">\\n          <div class=\\\"tab-pane active\\\" id=\\\"program\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"program-tab\\\"> \\n            <div class=\\\"mt-4\\\">\\n              <div *ngFor=\\\"let day of programDays\\\">\\n                <div class=\\\"d-flex justify-content-between\\\">\\n                  <span>Day {{day.dayNumber}}</span>\\n                  <span (click)=\\\"deleteProgramDay(day)\\\"><i class=\\\"fas fa-trash-alt\\\"></i></span>\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control mb-1\\\" [(ngModel)]=\\\"day.title\\\"/>\\n                  <textarea type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"day.description\\\"></textarea>\\n                </div>      \\n              </div>    \\n            </div>       \\n            <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewDayToProgram()\\\">Add day description</button>\\n          </div>\\n          <div class=\\\"tab-pane\\\" id=\\\"price\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"profile-tab\\\">\\n            <div *ngFor=\\\"priceItem of priceItems\\\">\\n              \\n            </div>\\n          </div>\\n          <div class=\\\"tab-pane\\\" id=\\\"faq\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"messages-tab\\\">222</div>\\n          <div class=\\\"tab-pane\\\" id=\\\"photos\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"settings-tab\\\">333</div>\\n        </div>\\n\\n\\n        <div class=\\\"modal-footer pb-0\\\">\\n          <button class=\\\"btn btn-outline-dark\\\" type=\\\"button\\\" (click)=\\\"saveChanges()\\\">Save changes</button>\\n        </div>\\n    </div>    \\n   \"","module.exports = \"<div>    \\n    <table class=\\\"table table-hover\\\">\\n        <thead>\\n          <tr>\\n            <th scope=\\\"col\\\">#</th>\\n            <th scope=\\\"col\\\">Name</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Actions</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let trip of trips$; let i = index;\\\">\\n            <th scope=\\\"row\\\">{{ i + 1}}</th>\\n            <td>{{ trip.name }}</td>\\n            <td>{{ trip.text }}</td>    \\n            <td class=\\\"text-center\\\">\\n              <a (click)=\\\"editTrip(trip.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-pencil-alt\\\"></i></a>&nbsp;\\n              <a (click)=\\\"deleteTrip(trip.id)\\\" class=\\\"cursor-pointer\\\"><i class=\\\"fas fa-trash-alt\\\"></i></a>\\n            </td>     \\n          </tr>          \\n        </tbody>\\n      </table>\\n</div>\\n<div>\\n    <button class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"addNewTrip()\\\">Add new trip</button>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { TripsListComponent } from './ui/trips/trips-list/trips-list.component';\nimport { TripEditComponent } from './ui/trips/trip-edit/trip-edit.component';\nimport { DestinationsComponent } from './ui/destinations/destinations.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/trips'},\n  { path: 'trips', pathMatch: 'full', component: TripsListComponent},\n  { path: '**', redirectTo: ''}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'AdminApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { TripsListComponent } from './ui/trips/trips-list/trips-list.component';\nimport { TripEditComponent } from './ui/trips/trip-edit/trip-edit.component';\nimport { DestinationsComponent } from './ui/destinations/destinations.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TripsListComponent,\n    TripEditComponent,\n    DestinationsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  // providers: [\n  //   // {provide: APP_BASE_HREF, useValue : '/Admin/AdminHome/Index/' }\n  //   {provide: APP_BASE_HREF, useValue : '/' }\n  // ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class ProgramDay {\r\n    id: string;\r\n    dayNumber: number;\r\n    title: string;\r\n    description: string;\r\n    tripId: string;\r\n}\r\n","export class Trip {\r\n    id: string;\r\n    name: string;\r\n    text: string;\r\n    url: string;\r\n    imagePath: string;\r\n    startDate: Date;\r\n    endDate: Date;\r\n    price: number;\r\n    priceText: string;\r\n    sale: number;\r\n    hasSale: boolean;\r\n    days: number;\r\n    nights: number;\r\n    groupSize: number;\r\n    tourDates: string;\r\n    map: string;\r\n    seoId: string;\r\n    destinatioId: string;\r\n    activityId: string;\r\n    tripTypeId: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { Trip } from '../models/trip.model';\nimport { ProgramDay } from '../models/program-day';\n\nconst SERVER_URL = 'http://localhost:20855/api';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TripsService {\n\n  constructor(private http: HttpClient) { }\n\n  getTripsList(): Observable<Trip[]> {\n    return this.http.get<Trip[]>('/api/Trips/getTripsList');\n  }\n\n  getTripById(tripId: string): Observable<Trip> {\n    return this.http.get<Trip>('/api/Trips/getTripById/' + tripId);\n  }\n\n  saveTrip(trip: Trip): Observable<Trip> {\n    return this.http.post<Trip>('/api/Trips/createTrip', trip);\n  }\n\n  updateTrip(trip: Trip): Observable<Trip> {\n    return this.http.post<Trip>('/api/Trips/updateTrip', trip);\n  }\n\n  deleteTrip(newsId: string): Observable<Trip> {\n    return this.http.get<Trip>('/api/Trips/deleteTrip/' + newsId);\n  }\n\n  getProgramDaysByTripId(tripId: string): Observable<ProgramDay[]>  {\n    return this.http.get<ProgramDay[]>('/api/Trips/GetProgramDaysByTripId/' + tripId);\n  }\n\n  createProgramDay(programDay: ProgramDay): Observable<ProgramDay> {\n    return this.http.post<ProgramDay>('/api/Trips/createProgramDay', programDay);\n  }\n\n  updateProgramDay(programDay: ProgramDay): Observable<ProgramDay> {\n    return this.http.post<ProgramDay>('/api/Trips/updateProgramDay', programDay);\n  }\n\n  deleteProgramDay(programDayId: string): Observable<ProgramDay> {\n    return this.http.get<ProgramDay>('/api/Trips/deleteProgramDay/' + programDayId);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-destinations',\n  templateUrl: './destinations.component.html'\n})\nexport class DestinationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { Trip } from '../../../core/models/trip.model';\nimport { ProgramDay } from '../../../core/models/program-day';\nimport { PriceItem } from '../../../core/models/price-item';\nimport { TripsService } from '../../../core/services/trips.service';\nimport { NgbModal, NgbActiveModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-trip-edit',\n  templateUrl: './trip-edit.component.html'\n})\nexport class TripEditComponent implements OnInit {\n  @Input() tripId: string;\n  @Output() updateList: EventEmitter<any> = new EventEmitter();\n  currentTrip: Trip;\n  currentTripForm: FormGroup;\n\n  programDays: ProgramDay[] = [];\n  priceItems: PriceItem[] = [];\n\n  startDateStr: string;\n  endDateStr: string;\n\n  constructor(\n    private tripsService: TripsService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private cdr: ChangeDetectorRef,\n    public modal: NgbActiveModal\n  ) { }\n\n  ngOnInit() {\n    const datePipe = new DatePipe('en-US');\n    this.initcurrentTrip();\n    if (this.tripId) {\n      this.tripsService.getTripById(this.tripId).subscribe(\n        res => {\n          this.currentTrip = res;\n          this.startDateStr = datePipe.transform(this.currentTrip.startDate, 'MM/dd/yyyy');\n          this.endDateStr = datePipe.transform(this.currentTrip.endDate, 'MM/dd/yyyy');\n          this.loadcurrentTrip();\n          this.loadProgramDays();\n          this.cdr.detectChanges();\n        }\n      );\n    } else {\n      this.currentTrip = new Trip();\n    }\n  }\n\n  initcurrentTrip() {\n    this.currentTripForm = this.fb.group({\n      id: [''],\n      name: [''],\n      text: [''],\n      url: [''],\n      imagePath: [''],\n      startDateStr: [''],\n      endDateStr: [''],\n      price: [''],\n      priceText: [''],\n      sale: [''],\n      hasSale: [''],\n      days: [''],\n      nights: [''],\n      groupSize: [''],\n      tourDates: [''],\n      seoId: [''],\n      destinatioId: [''],\n      activityId: [''],\n      tripTypeId: ['']\n    });\n  }\n\n  loadcurrentTrip() {\n    this.currentTripForm = this.fb.group({\n      id: [this.currentTrip.id],\n      name: [this.currentTrip.name],\n      text: [this.currentTrip.text],\n      url: [this.currentTrip.url],\n      imagePath: [this.currentTrip.imagePath],\n      startDateStr: [this.startDateStr],\n      endDateStr: [this.endDateStr],\n      price: [this.currentTrip.price],\n      priceText: [this.currentTrip.priceText],\n      sale: [this.currentTrip.sale],\n      hasSale: [this.currentTrip.hasSale],\n      days: [this.currentTrip.days],\n      nights: [this.currentTrip.nights],\n      groupSize: [this.currentTrip.groupSize],\n      tourDates: [this.currentTrip.tourDates],\n      seoId: [this.currentTrip.seoId],\n      destinatioId: [this.currentTrip.destinatioId],\n      activityId: [this.currentTrip.activityId],\n      tripTypeId: [this.currentTrip.tripTypeId]\n    });\n  }\n\n  loadProgramDays() {\n    this.tripsService.getProgramDaysByTripId(this.tripId).subscribe(\n      res => {\n        this.programDays = res;\n      }\n    );\n  }\n\n  addNewDayToProgram() {\n    const newProgramDay = new ProgramDay();\n    newProgramDay.dayNumber = this.programDays.length + 1;\n    this.programDays.push(newProgramDay);\n  }\n\n  deleteProgramDay(programDay: ProgramDay) {\n    if (programDay.id !== '' && programDay.id !== undefined) {\n      this.programDays.splice(programDay.dayNumber - 1, 1);\n    }\n  }\n\n  saveProgrmDays(currentTrip: Trip) {\n    if (this.currentTrip.id !== '' && this.currentTrip.id !== undefined) {\n      // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.programDays.length; i++) {\n          this.tripsService.updateProgramDay(this.programDays[i]).subscribe();\n        }\n      } else {\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < this.programDays.length; i++) {\n          this.programDays[i].tripId = currentTrip.id;\n          this.tripsService.createProgramDay(this.programDays[i]).subscribe();\n        }\n    }\n  }\n\n  saveChanges() {\n    const newTrip = new Trip();\n    // tslint:disable-next-line:no-string-literal\n    newTrip.name = this.currentTripForm.controls.name.value;\n    newTrip.text = this.currentTripForm.controls.text.value;\n    newTrip.url = this.currentTripForm.controls.url.value;\n    newTrip.imagePath = this.currentTripForm.controls.imagePath.value;\n    newTrip.startDate = this.currentTripForm.controls.startDateStr.value;\n    newTrip.endDate = this.currentTripForm.controls.endDateStr.value;\n    newTrip.price = this.currentTripForm.controls.price.value;\n    newTrip.priceText = this.currentTripForm.controls.priceText.value;\n    newTrip.sale = this.currentTripForm.controls.sale.value;\n    newTrip.hasSale = this.currentTripForm.controls.hasSale.value;\n    newTrip.days = this.currentTripForm.controls.days.value;\n    newTrip.nights = this.currentTripForm.controls.nights.value;\n    newTrip.groupSize = this.currentTripForm.controls.groupSize.value;\n    newTrip.tourDates = this.currentTripForm.controls.tourDates.value;\n    newTrip.seoId = this.currentTripForm.controls.seoId.value;\n    newTrip.destinatioId = this.currentTripForm.controls.destinatioId.value;\n    newTrip.activityId = this.currentTripForm.controls.activityId.value;\n    newTrip.tripTypeId = this.currentTripForm.controls.tripTypeId.value;\n    if (this.currentTrip.id) {\n      this.tripsService.updateTrip(newTrip).subscribe(\n        (res: Trip) => {\n          this.saveProgrmDays(res);\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    } else {\n      this.tripsService.saveTrip(newTrip).subscribe(\n        (res: Trip) => {\n          this.saveProgrmDays(res);\n          this.modal.dismiss();\n          this.updateList.emit();\n        }\n      );\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { TripsService } from '../../../core/services/trips.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { Trip } from '../../../core/models/trip.model';\nimport { TripEditComponent } from '../trip-edit/trip-edit.component';\n\n@Component({\n  selector: 'app-trips',\n  templateUrl: './trips-list.component.html'\n})\nexport class TripsListComponent implements OnInit {\n  trips$: Trip[];\n\n  subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private tripsService: TripsService,\n    private modalService: NgbModal\n  ) { }\n\n  ngOnInit() {\n    this.subscriptions.add(this.tripsService.getTripsList().subscribe(\n      res => {\n        this.trips$ = res;\n      }\n    ));\n  }\n\n  addNewTrip() {\n    const modalRef = this.modalService.open(TripEditComponent, {size: 'lg'});\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      // this.trips$ = receivedEntry;\n      this.tripsService.getTripsList().subscribe(\n        res => {\n          this.trips$ = res;\n        }\n      );\n    });\n  }\n\n  editTrip(id: string) {\n    const modalRef = this.modalService.open(TripEditComponent, {size: 'lg'});\n    modalRef.componentInstance.tripId = id;\n    modalRef.componentInstance.updateList.subscribe((receivedEntry) => {\n      this.tripsService.getTripsList().subscribe(\n        res => {\n          this.trips$ = res;\n        }\n      );\n    });\n  }\n\n  deleteTrip(id: string) {\n\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}